// Code generated by MockGen. DO NOT EDIT.
// Source: api.go

// Package mocks is a generated GoMock package.
package mocks

import (
	metrics "github.com/c-garcia/halleffect/internal/pkg/metrics"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockExporter is a mock of Exporter interface
type MockExporter struct {
	ctrl     *gomock.Controller
	recorder *MockExporterMockRecorder
}

// MockExporterMockRecorder is the mock recorder for MockExporter
type MockExporterMockRecorder struct {
	mock *MockExporter
}

// NewMockExporter creates a new mock instance
func NewMockExporter(ctrl *gomock.Controller) *MockExporter {
	mock := &MockExporter{ctrl: ctrl}
	mock.recorder = &MockExporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockExporter) EXPECT() *MockExporterMockRecorder {
	return m.recorder
}

// Publish mocks base method
func (m_2 *MockExporter) Publish(m metrics.JobDurationMetric) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "Publish", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// Publish indicates an expected call of Publish
func (mr *MockExporterMockRecorder) Publish(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Publish", reflect.TypeOf((*MockExporter)(nil).Publish), m)
}
