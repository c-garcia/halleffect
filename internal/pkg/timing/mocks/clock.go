// Code generated by MockGen. DO NOT EDIT.
// Source: clock.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockClock is a mock of Clock interface
type MockClock struct {
	ctrl     *gomock.Controller
	recorder *MockClockMockRecorder
}

// MockClockMockRecorder is the mock recorder for MockClock
type MockClockMockRecorder struct {
	mock *MockClock
}

// NewMockClock creates a new mock instance
func NewMockClock(ctrl *gomock.Controller) *MockClock {
	mock := &MockClock{ctrl: ctrl}
	mock.recorder = &MockClockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClock) EXPECT() *MockClockMockRecorder {
	return m.recorder
}

// UnixTime mocks base method
func (m *MockClock) UnixTime() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnixTime")
	ret0, _ := ret[0].(int64)
	return ret0
}

// UnixTime indicates an expected call of UnixTime
func (mr *MockClockMockRecorder) UnixTime() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnixTime", reflect.TypeOf((*MockClock)(nil).UnixTime))
}
