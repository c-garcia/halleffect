// Code generated by MockGen. DO NOT EDIT.
// Source: api.go

// Package mocks is a generated GoMock package.
package mocks

import (
	publisher "github.com/c-garcia/halleffect/internal/pkg/publisher"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMetricsPublisher is a mock of MetricsPublisher interface
type MockMetricsPublisher struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsPublisherMockRecorder
}

// MockMetricsPublisherMockRecorder is the mock recorder for MockMetricsPublisher
type MockMetricsPublisherMockRecorder struct {
	mock *MockMetricsPublisher
}

// NewMockMetricsPublisher creates a new mock instance
func NewMockMetricsPublisher(ctrl *gomock.Controller) *MockMetricsPublisher {
	mock := &MockMetricsPublisher{ctrl: ctrl}
	mock.recorder = &MockMetricsPublisherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMetricsPublisher) EXPECT() *MockMetricsPublisherMockRecorder {
	return m.recorder
}

// PublishJobDuration mocks base method
func (m_2 *MockMetricsPublisher) PublishJobDuration(m publisher.JobDurationMetric) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "PublishJobDuration", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// PublishJobDuration indicates an expected call of PublishJobDuration
func (mr *MockMetricsPublisherMockRecorder) PublishJobDuration(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublishJobDuration", reflect.TypeOf((*MockMetricsPublisher)(nil).PublishJobDuration), m)
}
